From: topjohnwu <topjohnwu@gmail.com>
Date: Sat, 19 May 2018 15:43:47 +0800
Subject: [PATCH] Minor adjustments to support ndk-build

---
 archival/libarchive/Kbuild.src     | 11 +----------
 include/libbb.h                    |  1 +
 include/platform.h                 |  9 ++++++++-
 libbb/getopt32.c                   |  2 +-
 libbb/missing_syscalls.c           |  2 +-
 libbb/semctl.c                     |  4 ++--
 networking/ether-wake.c            |  1 +
 networking/ether_aton_r.c          |  1 +
 networking/ether_ntoa_r.c          |  1 +
 networking/libiproute/libnetlink.h |  1 +
 networking/traceroute.c            |  3 ++-
 networking/udhcp/common.h          |  2 ++
 networking/udhcp/dhcpd.c           |  2 --
 networking/zcip.c                  |  1 +
 shell/glob.h                       |  6 +++---
 util-linux/getopt.c                |  2 +-
 util-linux/ipcrm.c                 |  2 +-
 util-linux/ipcs.c                  |  6 +++---
 util-linux/setpriv.c               |  3 ++-
 util-linux/switch_root.c           |  4 ++--
 20 files changed, 35 insertions(+), 29 deletions(-)

diff --git a/archival/libarchive/Kbuild.src b/archival/libarchive/Kbuild.src
index e1a8a7529..1679e78bc 100644
--- a/archival/libarchive/Kbuild.src
+++ b/archival/libarchive/Kbuild.src
@@ -29,16 +29,7 @@ COMMON_FILES:= \
 	find_list_entry.o \
 	init_handle.o
 
-DPKG_FILES:= \
-	unpack_ar_archive.o \
-	filter_accept_list_reassign.o \
-	unsafe_prefix.o \
-	get_header_ar.o \
-	get_header_tar.o \
-	get_header_tar_gz.o \
-	get_header_tar_bz2.o \
-	get_header_tar_lzma.o \
-	get_header_tar_xz.o \
+DPKG_FILES:=
 
 INSERT
 
diff --git a/include/libbb.h b/include/libbb.h
index a28f49d3d..a3a40c5b2 100644
--- a/include/libbb.h
+++ b/include/libbb.h
@@ -10,6 +10,7 @@
 #ifndef LIBBB_H
 #define LIBBB_H 1
 
+#include "autoconf.h"
 #include "platform.h"
 
 #include <ctype.h>
diff --git a/include/platform.h b/include/platform.h
index 9e9ffa782..f813b956c 100644
--- a/include/platform.h
+++ b/include/platform.h
@@ -7,6 +7,13 @@
 #ifndef BB_PLATFORM_H
 #define BB_PLATFORM_H 1
 
+/* Check for NDK version */
+#ifdef __ANDROID__
+# include <android/api-level.h>
+# ifdef __ANDROID_NDK__
+#  include <android/ndk-version.h>
+# endif
+#endif
 
 /* Convenience macros to test the version of gcc. */
 #undef __GNUC_PREREQ
@@ -120,7 +127,7 @@
  * (-DFAST_FUNC= )
  */
 #ifndef FAST_FUNC
-# if __GNUC_PREREQ(3,0) && defined(i386)
+# if !defined(__ANDROID__) && __GNUC_PREREQ(3,0) && defined(i386)
 /* stdcall makes callee to pop arguments from stack, not caller */
 #  define FAST_FUNC __attribute__((regparm(3),stdcall))
 /* #elif ... - add your favorite arch today! */
diff --git a/libbb/getopt32.c b/libbb/getopt32.c
index 378510063..b8ed3dba3 100644
--- a/libbb/getopt32.c
+++ b/libbb/getopt32.c
@@ -6,10 +6,10 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 #if ENABLE_LONG_OPTS
 # include <getopt.h>
 #endif
-#include "libbb.h"
 
 //kbuild:lib-y += getopt32.o
 
diff --git a/libbb/missing_syscalls.c b/libbb/missing_syscalls.c
index 6e81a1729..a98efad23 100644
--- a/libbb/missing_syscalls.c
+++ b/libbb/missing_syscalls.c
@@ -142,7 +142,7 @@ int semop(int semid, struct sembuf *sops, unsigned nsops)
   return syscall(__NR_semop, semid, sops, nsops);
 }
 
-# if __ANDROID_API__ < 21
+# if __ANDROID_API__ < 21 && __NDK_MAJOR__ < 16
 int tcdrain(int fd)
 {
 	return ioctl(fd, TCSBRK, 1);
diff --git a/libbb/semctl.c b/libbb/semctl.c
index 5ddd07f3c..85183bb7b 100644
--- a/libbb/semctl.c
+++ b/libbb/semctl.c
@@ -22,10 +22,10 @@
 // syscall used by syslogd, ipcrm, ipcs
 //kbuild:lib-y += semctl.o
 
+#include "libbb.h"
 #include <sys/syscall.h>   /* For __NR_xxx definitions */
 #include <stdarg.h>
-#include <linux/sem.h>
-#include "libbb.h"
+#include <sys/sem.h>
 
 #ifndef __NR_semctl
 #define __NR_semctl 66
diff --git a/networking/ether-wake.c b/networking/ether-wake.c
index 3b9ff730e..878c9d334 100644
--- a/networking/ether-wake.c
+++ b/networking/ether-wake.c
@@ -87,6 +87,7 @@
 
 #include "libbb.h"
 #include <netpacket/packet.h>
+#include <net/ethernet.h>
 #include <netinet/ether.h>
 #include <netinet/if_ether.h>
 #include <linux/if.h>
diff --git a/networking/ether_aton_r.c b/networking/ether_aton_r.c
index 0215f16d4..c762b5775 100644
--- a/networking/ether_aton_r.c
+++ b/networking/ether_aton_r.c
@@ -19,6 +19,7 @@
 
 #include <ctype.h>
 #include <sys/types.h>
+#include <net/ethernet.h>
 #include <netinet/ether.h>
 #include <netinet/if_ether.h>
 
diff --git a/networking/ether_ntoa_r.c b/networking/ether_ntoa_r.c
index cd5061434..0749129b2 100644
--- a/networking/ether_ntoa_r.c
+++ b/networking/ether_ntoa_r.c
@@ -18,6 +18,7 @@
    02111-1307 USA.  */
 
 #include <stdio.h>
+#include <net/ethernet.h>
 #include <netinet/ether.h>
 #include <netinet/if_ether.h>
 
diff --git a/networking/libiproute/libnetlink.h b/networking/libiproute/libnetlink.h
index 51bee2d67..bb760fd5a 100644
--- a/networking/libiproute/libnetlink.h
+++ b/networking/libiproute/libnetlink.h
@@ -7,6 +7,7 @@
  * in linux/[rt]netlink.h. 2.6.19 seems to be ok, though */
 #include <linux/netlink.h>
 #include <linux/rtnetlink.h>
+#include <linux/if_ether.h>
 
 PUSH_AND_SET_FUNCTION_VISIBILITY_TO_HIDDEN
 
diff --git a/networking/traceroute.c b/networking/traceroute.c
index a027b928a..1182cbfe2 100644
--- a/networking/traceroute.c
+++ b/networking/traceroute.c
@@ -299,6 +299,8 @@
 
 #define TRACEROUTE_SO_DEBUG 0
 
+#include "libbb.h"
+
 #include <net/if.h>
 #include <arpa/inet.h>
 #include <netinet/in.h>
@@ -316,7 +318,6 @@
 # endif
 #endif
 
-#include "libbb.h"
 #include "inet_common.h"
 
 #ifndef IPPROTO_ICMP
diff --git a/networking/udhcp/common.h b/networking/udhcp/common.h
index 50ea9199b..6119bde44 100644
--- a/networking/udhcp/common.h
+++ b/networking/udhcp/common.h
@@ -10,8 +10,10 @@
 
 #include "libbb.h"
 #include "common_bufsiz.h"
+#include <net/ethernet.h>
 #include <netinet/udp.h>
 #include <netinet/ip.h>
+#include <linux/if_ether.h>
 
 PUSH_AND_SET_FUNCTION_VISIBILITY_TO_HIDDEN
 
diff --git a/networking/udhcp/dhcpd.c b/networking/udhcp/dhcpd.c
index 60950ffda..d169e1042 100644
--- a/networking/udhcp/dhcpd.c
+++ b/networking/udhcp/dhcpd.c
@@ -42,8 +42,6 @@
 #include <netinet/ether.h>
 #include <syslog.h>
 
-#include "../ether_port.h"
-
 #include "common.h"
 #include "dhcpc.h"
 #include "dhcpd.h"
diff --git a/networking/zcip.c b/networking/zcip.c
index 748168472..c6e7c9393 100644
--- a/networking/zcip.c
+++ b/networking/zcip.c
@@ -57,6 +57,7 @@
 #include "libbb.h"
 #include "common_bufsiz.h"
 #include <netinet/ether.h>
+#include <net/ethernet.h>
 #include <net/if.h>
 #include <net/if_arp.h>
 #include <linux/sockios.h>
diff --git a/shell/glob.h b/shell/glob.h
index e8e65786d..c274a8f6a 100644
--- a/shell/glob.h
+++ b/shell/glob.h
@@ -47,7 +47,7 @@
 #include <sys/cdefs.h>
 //#include <sys/_types.h>
 
-#ifndef	_SIZE_T_DECLARED
+#if !defined(_SIZE_T_DECLARED) && !defined(__ANDROID__)
 typedef	__size_t	size_t;
 #define	_SIZE_T_DECLARED
 #endif
@@ -74,7 +74,7 @@ typedef struct {
 	int (*gl_stat)(const char *, struct stat *);
 } glob_t;
 
-#if __POSIX_VISIBLE >= 199209
+#if __POSIX_VISIBLE >= 199209 || defined(__ANDROID__)
 /* Believed to have been introduced in 1003.2-1992 */
 #define	GLOB_APPEND	0x0001	/* Append to output from previous call. */
 #define	GLOB_DOOFFS	0x0002	/* Use gl_offs. */
@@ -91,7 +91,7 @@ typedef struct {
 #define	GLOB_NOSYS	(-4)	/* Obsolete: source comptability only. */
 #endif /* __POSIX_VISIBLE >= 199209 */
 
-#if __BSD_VISIBLE
+#if __BSD_VISIBLE || defined(__ANDROID__)
 #define	GLOB_ALTDIRFUNC	0x0040	/* Use alternately specified directory funcs. */
 #define	GLOB_BRACE	0x0080	/* Expand braces ala csh. */
 #define	GLOB_MAGCHAR	0x0100	/* Pattern had globbing characters. */
diff --git a/util-linux/getopt.c b/util-linux/getopt.c
index 4431a7e74..7c5689c99 100644
--- a/util-linux/getopt.c
+++ b/util-linux/getopt.c
@@ -105,10 +105,10 @@
 //usage:       " esac\n"
 //usage:       "done\n"
 
+#include "libbb.h"
 #if ENABLE_FEATURE_GETOPT_LONG
 # include <getopt.h>
 #endif
-#include "libbb.h"
 
 /* NON_OPT is the code that is returned when a non-option is found in '+'
    mode */
diff --git a/util-linux/ipcrm.c b/util-linux/ipcrm.c
index a93ceee11..6335985e1 100644
--- a/util-linux/ipcrm.c
+++ b/util-linux/ipcrm.c
@@ -28,7 +28,7 @@
 #include <sys/msg.h>
 #include <sys/sem.h>
 
-#if defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED)
+#if defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED) || defined(__ANDROID__)
 /* union semun is defined by including <sys/sem.h> */
 #else
 /* according to X/OPEN we have to define it ourselves */
diff --git a/util-linux/ipcs.c b/util-linux/ipcs.c
index 4863a5c29..a0e248874 100644
--- a/util-linux/ipcs.c
+++ b/util-linux/ipcs.c
@@ -19,6 +19,8 @@
 
 //kbuild:lib-$(CONFIG_IPCS) += ipcs.o
 
+#include "libbb.h"
+
 /* X/OPEN tells us to use <sys/{types,ipc,sem}.h> for semctl() */
 /* X/OPEN tells us to use <sys/{types,ipc,msg}.h> for msgctl() */
 /* X/OPEN tells us to use <sys/{types,ipc,shm}.h> for shmctl() */
@@ -28,8 +30,6 @@
 #include <sys/msg.h>
 #include <sys/shm.h>
 
-#include "libbb.h"
-
 /*-------------------------------------------------------------------*/
 /* SHM_DEST and SHM_LOCKED are defined in kernel headers,
    but inside #ifdef __KERNEL__ ... #endif */
@@ -72,7 +72,7 @@ struct shm_info {
 /* The last arg of semctl is a union semun, but where is it defined?
    X/OPEN tells us to define it ourselves, but until recently
    Linux include files would also define it. */
-#if defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED)
+#if defined(__GNU_LIBRARY__) && !defined(_SEM_SEMUN_UNDEFINED) || defined(__ANDROID__)
 /* union semun is defined by including <sys/sem.h> */
 #else
 /* according to X/OPEN we have to define it ourselves */
diff --git a/util-linux/setpriv.c b/util-linux/setpriv.c
index af079fae8..930b068c2 100644
--- a/util-linux/setpriv.c
+++ b/util-linux/setpriv.c
@@ -78,6 +78,8 @@
 // --selinux-label <label>  set SELinux label
 // --apparmor-profile <pr>  set AppArmor profile
 
+#include "libbb.h"
+
 #if ENABLE_FEATURE_SETPRIV_CAPABILITIES
 #include <linux/capability.h>
 // #include <sys/capability.h>
@@ -90,7 +92,6 @@ extern int capget(cap_user_header_t header, const cap_user_data_t data);
 // This way, libcap needs not be installed in build environment.
 #endif
 #include <sys/prctl.h>
-#include "libbb.h"
 
 #ifndef PR_CAPBSET_READ
 #define PR_CAPBSET_READ 23
diff --git a/util-linux/switch_root.c b/util-linux/switch_root.c
index 947dd0cdc..f6c61ecfc 100644
--- a/util-linux/switch_root.c
+++ b/util-linux/switch_root.c
@@ -35,6 +35,8 @@
 //kbuild:lib-$(CONFIG_SWITCH_ROOT) += switch_root.o
 //kbuild:lib-$(CONFIG_RUN_INIT)    += switch_root.o
 
+#include "libbb.h"
+
 #include <sys/vfs.h>
 #include <sys/mount.h>
 #if ENABLE_RUN_INIT
@@ -56,8 +58,6 @@ extern int capget(cap_user_header_t header, const cap_user_data_t data);
 // This way, libcap needs not be installed in build environment.
 #endif
 
-#include "libbb.h"
-
 // Make up for header deficiencies
 #ifndef RAMFS_MAGIC
 # define RAMFS_MAGIC ((unsigned)0x858458f6)
-- 
2.17.1

